// –ù–∞–ø–∏—Å–∞—Ç—å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é –∏–≥—Ä—ã ["–°–∞–ø–µ—Ä"](http://minesweeper.odd.su/). –ó–∞–¥–∞—á–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –Ω–∞ —è–∑—ã–∫–µ javascript, –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–æ–≤ –∏ —Å—Ç–æ—Ä–æ–Ω–Ω–∏–∫ –±–∏–±–ª–∏–æ—Ç–µ–∫ (—Ç–∏–ø–∞ Jquery).

// #### –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è:
// - –ù–∞—Ä–∏—Å–æ–≤–∞—Ç—å –Ω–∞ —ç–∫—Ä–∞–Ω–µ –ø–æ–ª–µ 8*8 (–º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –∏–ª–∏ –Ω–∞–±–æ—Ä –±–ª–æ–∫–æ–≤).
// - –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –ø–æ–ª–µ —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º 10 –º–∏–Ω. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤–∏–¥–∏—Ç –≥–¥–µ –æ–Ω–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è.
// - –ö–ª–∏–∫ –ª–µ–≤–æ–π –∫–Ω–æ–ø–∫–æ–π –ø–æ —è—á–µ–π–∫–µ –ø–æ–ª—è "–æ—Ç–∫—Ä—ã–≤–∞–µ—Ç" –µ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
//   - –ï—Å–ª–∏ –≤ –¥–∞–Ω–Ω–æ–π —è—á–µ–π–∫–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –º–∏–Ω–∞, –∏–≥—Ä–æ–∫ –ø—Ä–æ–∏–≥—Ä–∞–ª. –í —Ç–∞–∫–æ–º —Å–ª—É—á–∞–µ –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –º–∏–Ω—ã –Ω–∞ –ø–æ–ª–µ. –î—Ä—É–≥–∏–µ –¥–µ–π—Å—Ç–≤–∏—è —Å—Ç–∞—é—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã, –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É.
//   - –ï—Å–ª–∏ –º–∏–Ω—ã –Ω–µ—Ç, –ø–æ–∫–∞–∑–∞—Ç—å —Ü–∏—Ñ—Ä—É - —Å–∫–æ–ª—å–∫–æ –º–∏–Ω –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Ä—è–¥–æ–º —Å —ç—Ç–æ–π —è—á–µ–π–∫–æ–π.
//   - –ï—Å–ª–∏ —è—á–µ–π–∫–∞ –ø—É—Å—Ç–∞—è (—Ä—è–¥–æ–º —Å –Ω–µ–π –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–π –º–∏–Ω—ã) - –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–∫—Ä—ã—Ç—å –≤—Å–µ —Å–æ—Å–µ–¥–Ω–∏–µ —è—á–µ–π–∫–∏ —Å —Ü–∏—Ñ—Ä–∞–º–∏.
// - –ö–ª–∏–∫ –ø—Ä–∞–≤–æ–π –∫–Ω–æ–ø–∫–∏ –º—ã—à–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∏–ª–∏ —Å–Ω–∏–º–∞–µ—Ç —Å "–∑–∞–∫—Ä—ã—Ç–æ–π" —è—á–µ–π–∫–∏ —Ñ–ª–∞–∂–æ–∫ –º–∏–Ω—ã.
// - –ü–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ —Ö–æ–¥–∞ –Ω–∞–¥ –ø–æ–ª–µ–º –¥–æ–ª–∂–Ω–∞ –ø–æ—è–≤–ª—è—Ç—å—Å—è –∫–Ω–æ–ø–∫–∞ "–ù–∞—á–∞—Ç—å –∏–≥—Ä—É –∑–∞–Ω–æ–≤–æ",  –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –æ–±–Ω—É–ª—è—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∏ –∑–∞–Ω–æ–≤–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª–µ.
// - –ù–∞–¥ –ø–æ–ª–µ–º –¥–æ–ª–∂–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞—Å—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ñ–ª–∞–∂–∫–æ–≤, –∏ –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω (–Ω–∞–ø—Ä–∏–º–µ—Ä `7 / 10`).

// #### –ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏:
// - –ü—Ä–∏ –¥–≤–æ–π–Ω–æ–º –∫–ª–∏–∫–µ –Ω–∞ —è—á–µ–π–∫—É —Å —Ü–∏—Ñ—Ä–æ–π - –µ—Å–ª–∏ –≤–æ–∫—Ä—É–≥ –Ω–µ–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —Ç–∞–∫–æ–µ –∂–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–ª–∞–∂–∫–æ–≤, —á—Ç–æ —É–∫–∞–∑–∞–Ω–æ –Ω–∞ —Ü–∏—Ñ—Ä–µ —ç—Ç–æ–π —è—á–µ–π–∫–∏, –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –≤—Å–µ —Å–æ—Å–µ–¥–Ω–∏–µ —è—á–µ–π–∫–∏.
// - –î–æ–±–∞–≤–∏—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ —É–∫–∞–∑—ã–≤–∞—Ç—å —Ä–∞–∑–º–µ—Ä –ø–æ–ª—è. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω –Ω–∞ –ø–æ–ª–µ –º–æ–∂–Ω–æ —Å—á–∏—Ç–∞—Ç—å –ø–æ —Ñ–æ—Ä–º—É–ª–µ `–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω = –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —è—á–µ–µ–∫ / 6`.

function createMinesweeper() {
  const container = document.createElement("div");
  let inputWrap = document.createElement("div");
  let input = document.createElement("input");
  let btn = document.createElement("button");

  let fieldWrap = document.createElement("div");

  const btnNewGame = document.createElement("button");

  let divResult = document.createElement("div");
  let countFlag = document.createElement("p");
  let countBomb = document.createElement("p");

  //—Ñ—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω–ø—É—Ç–∞ –≤–≤–æ–¥–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è inputa –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É---------------------
  function createInputWrapper() {
    input.type = "number";
    input.placeholder = "–£–∫–∞–∂–∏—Ç–µ —Ä–∞–∑–º–µ—Ä –ø–æ–ª—è";
    btn.textContent = "–°–æ–∑–¥–∞—Ç—å –ø–æ–ª–µ";
    inputWrap.prepend(input);
    inputWrap.append(btn);
    container.prepend(inputWrap);
  }

  createInputWrapper();

  fieldWrap.classList.add("field-wrap");
  inputWrap.after(fieldWrap);
  //—Ñ—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω–ø—É—Ç–∞ –≤–≤–æ–¥–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è inputa –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É---------------------

  // —Ñ—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–∞ —Ñ–ª–∞–∂–∫–æ–≤ –∏ –±–æ–º–±-------------

  let countFlagNumber = 0;

  function createResultFlagBomb() {
    divResult.classList.add("block-result");

    countFlag.textContent = `–†–∞—Å—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ñ–ª–∞–∂–∫–æ–≤: ${countFlagNumber}`;
    countBomb.textContent = `–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω: 0`;

    divResult.append(countFlag);
    divResult.append(countBomb);

    inputWrap.after(divResult);
  }
  createResultFlagBomb();

  // —Ñ—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–∞ —Ñ–ª–∞–∂–∫–æ–≤ –∏ –±–æ–º–±-------------
  let flag = true;
  container.classList.add("container");
  document.querySelector("h1").after(container);
  //document.body.prepend

  //—Ñ—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—è-------------------------------------------
  btn.addEventListener("click", createField, { once: true });
  //let number = 1;
  function createField() {
    let table = document.createElement("table");
    table.classList.add("table");

    for (let i = 0; i < Number(input.value); i++) {
      let tr = document.createElement("tr");
      for (let k = 0; k < Number(input.value); k++) {
        let td = document.createElement("td");
        let contentP = document.createElement("p");

        td.classList.add("square");
        td.classList.add("b-color");
        contentP.classList.add("content");
        contentP.classList.add("content-square-active");

        // td.dataset.number = number;
        // number++;

        td.append(contentP);
        tr.append(td);
      }
      table.append(tr);
    }
    fieldWrap.append(table);

    //—Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–º–¥–æ–º–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–∏–Ω-------------------------------------

    function setBomb() {
      let squareContent = document.querySelectorAll(".content");
      let indexSquareTd = Number(input.value) * Number(input.value) - 1;

      let amountBomb = indexSquareTd / 6;

      function randomNumber() {
        return Math.floor(0 + Math.random() * (indexSquareTd + 1 - 0));
      }

      for (let i = 0; i < amountBomb; i++) {
        if (squareContent[randomNumber()].textContent !== "üí£") {
          squareContent[randomNumber()].textContent = "üí£";
        } else {
          amountBomb++;
        }
      }
    }

    setBomb();
    //—Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–º–¥–æ–º–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–∏–Ω-------------------------------------
    createNumberOnField(); // —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞—Å—Å—Ç–∞–Ω–æ–≤–∫–∏ —á–∏—Å–µ–ª
    //–¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏–π –Ω–∞ —è—á–µ–π–∫–∏--------------------
    let squareTdEvent = document.querySelector(".table");

    //—Å–æ–±—ã—Ç–∏–µ –Ω–∞ –ª–µ–≤—É—é –∫–ª–∞–≤–∏—à—É------------------
    squareTdEvent.addEventListener("click", openSquare);
    let count = 1;
    function openSquare(event) {
      let hideContent = document.querySelectorAll(".content-square-active");
      if (count === 1) {
        createBtnNewGame();
        count++;
      }
      if (flag === false) {
        return;
      }

      if (event.target.nodeName === "TABLE" || event.target.nodeName === "TR") {
        return;
      }
      event.target.closest("td").classList.remove("b-color");
      event.target.firstElementChild.classList.remove("content-square-active");

      if (event.target.closest("td").classList.contains("set-flag")) {
        countFlagNumber--;
        countFlag.textContent = `–†–∞—Å—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ñ–ª–∞–∂–∫–æ–≤: ${countFlagNumber}`;
        event.target.classList.remove("set-flag");
      }

      if (event.target.textContent === "üí£") {
        event.currentTarget.classList.add("open-td");
        hideContent.forEach((item) => {
          item.classList.remove("content-square-active");
        });

        flag = false;

        if (flag === false) {
          input.setAttribute("readonly", true);
        }

        setTimeout(() => {
          alert("–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏");
        }, 300);
      }
      //—Ñ—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è —Ñ–ª–∞–≥–∞ –≤ —è—á–µ–π–∫–µ –±–æ–º–±—ã------------------------------------
      function deleteBombFlag() {
        let allTd = document.querySelectorAll(".square");
        Array.from(allTd).forEach((item) => {
          if (
            item.firstElementChild.textContent === "üí£" &&
            !item.classList.contains("b-color")
          ) {
            item.classList.remove("set-flag");
          }
        });
      }
      deleteBombFlag();
      //—Ñ—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è —Ñ–ª–∞–≥–∞ –≤ —è—á–µ–π–∫–µ –±–æ–º–±—ã------------------------------------
    }
    //—Å–æ–±—ã—Ç–∏–µ –Ω–∞ –ª–µ–≤—É—é –∫–ª–∞–≤–∏—à—É------------------------

    //—Å–æ–±—ã—Ç–∏–µ –Ω–∞ –ø—Ä–∞–≤—É—é –∫–ª–∞–≤–∏—à—É-------------------------
    squareTdEvent.addEventListener("contextmenu", setFlag);
    function setFlag(event) {
      event.preventDefault();
      event.target.classList.toggle("set-flag");

      if (
        event.target.nodeName === "TD" &&
        event.target.classList.contains("b-color")
      ) {
        if (event.target.classList.contains("set-flag")) {
          countFlagNumber++;
          countFlag.textContent = `–†–∞—Å—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ñ–ª–∞–∂–∫–æ–≤: ${countFlagNumber}`;
        } else {
          countFlagNumber--;
          countFlag.textContent = `–†–∞—Å—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ñ–ª–∞–∂–∫–æ–≤: ${countFlagNumber}`;
        }
      }
    }
    //—Å–æ–±—ã—Ç–∏–µ –Ω–∞ –ø—Ä–∞–≤—É—é –∫–ª–∞–≤–∏—à—É-------------------------

    //–¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏–π –Ω–∞ —è—á–µ–π–∫–∏--------------------

    // –∫–Ω–æ–ø–∫–∞ –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É--------------------
    function createBtnNewGame() {
      btnNewGame.textContent = "–ù–∞—á–∞—Ç—å –∏–≥—Ä—É –∑–∞–Ω–æ–≤–æ";
      btnNewGame.classList.add("btn-new-game");

      fieldWrap.before(btnNewGame);

      btnNewGame.addEventListener("click", (event) => {
        container.remove();
        createMinesweeper();
      });
    }
    // –∫–Ω–æ–ø–∫–∞ –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É--------------------
  }
  //—Ñ—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—è-----------------------------------------------

  function createNumberOnField() {
    let countRows = 1;
    let squareContentAll = document.querySelectorAll(".content");
    let arrSquareContentAll = Array.from(squareContentAll);

    let arrBombs = arrSquareContentAll.filter((item) => {
      if (item.textContent === "üí£") {
        return item;
      }
    });

    arrSquareContentAll.forEach((item) => {
      if (item.textContent !== "üí£") {
        item.textContent = 0;
      }
    });

    countBomb.textContent = `–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω: ${arrBombs.length}`;

    for (let i = 0; i < arrSquareContentAll.length; i++) {
      if (arrSquareContentAll[i].textContent === "üí£") {
        if (i - 1 >= 0) {
          if (arrSquareContentAll[i - 1] !== "üí£" && i - 1 >= 0) {
            if (Number(arrSquareContentAll[i - 1].textContent) === 0) {
              arrSquareContentAll[i - 1].textContent =
                Number(arrSquareContentAll[i - 1].textContent) + 1;
            }
          }
        }

        if (i + 1 < Number(input.value) * Number(input.value) - 1) {
          if (
            arrSquareContentAll[i + 1].textContent === "0" ||
            (Number(arrSquareContentAll[i + 1].textContent) / 1 &&
              i + 1 <= arrSquareContentAll.length - 1)
          ) {
            if (arrSquareContentAll[i + 2].textContent === "üí£") {
              arrSquareContentAll[i + 1].textContent =
                Number(arrSquareContentAll[i + 1].textContent) + 1;
            } else if (Number(arrSquareContentAll[i + 1].textContent) === 0) {
              arrSquareContentAll[i + 1].textContent =
                Number(arrSquareContentAll[i + 1].textContent) + 1;
            }
          }
        }

        //     //---------------------

        if (i - Number(input.value) >= 0) {
          //console.log(1);
          if (
            arrSquareContentAll[i - Number(input.value)].textContent === "0" ||
            (Number(arrSquareContentAll[i - Number(input.value)].textContent) /
              1 &&
              i - Number(input.value) >= 0)
          ) {
            arrSquareContentAll[i - Number(input.value)].textContent =
              Number(arrSquareContentAll[i - Number(input.value)].textContent) +
              1;
          }
        }

        if (i - Number(input.value) - 1 >= 0) {
          // console.log(1);
          if (
            arrSquareContentAll[i - Number(input.value) - 1].textContent ===
              "0" ||
            (Number(
              arrSquareContentAll[i - Number(input.value) - 1].textContent
            ) / 1 &&
              i - Number(input.value) >= 0)
          ) {
            arrSquareContentAll[i - Number(input.value) - 1].textContent =
              Number(
                arrSquareContentAll[i - Number(input.value) - 1].textContent
              ) + 1;
          }
        }

        if (i - Number(input.value) + 1 >= 0) {
          //console.log(1);
          if (
            arrSquareContentAll[i - Number(input.value) + 1].textContent ===
              "0" ||
            (Number(
              arrSquareContentAll[i - Number(input.value) + 1].textContent
            ) / 1 &&
              i - Number(input.value) >= 0)
          ) {
            arrSquareContentAll[i - Number(input.value) + 1].textContent =
              Number(
                arrSquareContentAll[i - Number(input.value) + 1].textContent
              ) + 1;
          }
        }

        //-----------------------------------------------------------------------------
        if (
          i + Number(input.value) <
          Number(input.value) * Number(input.value) - 1
        ) {
          // console.log(1);
          if (
            arrSquareContentAll[i + Number(input.value)].textContent === "0" ||
            (Number(arrSquareContentAll[i + Number(input.value)].textContent) /
              1 &&
              i + Number(input.value) <= arrSquareContentAll.length)
          ) {
            arrSquareContentAll[i + Number(input.value)].textContent =
              Number(arrSquareContentAll[i + Number(input.value)].textContent) +
              1;
          }
        }

        if (
          i + Number(input.value) - 1 <
          Number(input.value) * Number(input.value) - 1 - 1
        ) {
          //console.log(1);
          if (
            arrSquareContentAll[i + Number(input.value) - 1].textContent ===
              "0" ||
            (Number(
              arrSquareContentAll[i + Number(input.value) - 1].textContent
            ) / 1 &&
              i + Number(input.value) <= arrSquareContentAll.length)
          ) {
            arrSquareContentAll[i + Number(input.value) - 1].textContent =
              Number(
                arrSquareContentAll[i + Number(input.value) - 1].textContent
              ) + 1;
          }
        }

        if (
          i + Number(input.value) + 1 <
          Number(input.value) * Number(input.value)
        ) {
          //console.log(1);
          if (
            arrSquareContentAll[i + Number(input.value) + 1].textContent ===
              "0" ||
            (Number(
              arrSquareContentAll[i + Number(input.value) + 1].textContent
            ) / 1 &&
              i + Number(input.value) <= arrSquareContentAll.length)
          ) {
            arrSquareContentAll[i + Number(input.value) + 1].textContent =
              Number(
                arrSquareContentAll[i + Number(input.value) + 1].textContent
              ) + 1;
          }
        }
      }
    }
    //----------------------------------------

    for (
      let k = 1;
      k <= Number(input.value) * Number(input.value) - 1;
      k = k + Number(input.value)
    ) {
      if (k === 1) continue;

      if (arrSquareContentAll[k - 1].textContent === "üí£" && k - 1 !== 0) {
        arrSquareContentAll[k - 2].textContent =
          Number(arrSquareContentAll[k - 2].textContent) - 1;
      }

      if (arrSquareContentAll[k - 2].textContent === "üí£") {
        arrSquareContentAll[k - 1].textContent =
          Number(arrSquareContentAll[k - 1].textContent) - 1;
      }
    }
  }
}
createMinesweeper();


